From: Oscar Salvador <osalvador@suse.de>
Subject: mm-only-re-generate-demotion-targets-when-a-numa-node-changes-its-n_cpu-state-v3

add feedback from Huang Ying

Link: https://lkml.kernel.org/r/20220314150945.12694-1-osalvador@suse.de
Fixes: 884a6e5d1f93b ("mm/migrate: update node demotion order on hotplug events")
Reviewed-by: Baolin Wang <baolin.wang@linux.alibaba.com>
Tested-by: Baolin Wang <baolin.wang@linux.alibaba.com>
Reported-by: Abhishek Goel <huntbag@linux.vnet.ibm.com>
Signed-off-by: Oscar Salvador <osalvador@suse.de>
Cc: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 mm/migrate.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/mm/migrate.c~mm-only-re-generate-demotion-targets-when-a-numa-node-changes-its-n_cpu-state-v3
+++ a/mm/migrate.c
@@ -3280,12 +3280,16 @@ void __init migrate_on_reclaim_init(void
 				      GFP_KERNEL);
 	WARN_ON(!node_demotion);
 
+	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
 	/*
 	 * At this point, all numa nodes with memory/CPus have their state
 	 * properly set, so we can build the demotion order now.
+	 * Let us hold the cpu_hotplug lock just, as we could possibily have
+	 * CPU hotplug events during boot.
 	 */
+	cpus_read_lock();
 	set_migration_target_nodes();
-	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
+	cpus_read_unlock();
 }
 #endif /* CONFIG_HOTPLUG_CPU */
 
_
