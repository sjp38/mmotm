From: SeongJae Park <sj@kernel.org>
Subject: mm-damon-remove-some-no-need-func-definitions-in-damonh-file-fix

mm-damon-remove-some-no-need-func-definitions-in-damonh-file.patch[1],
which is merged in -mm but mainline yet, is making unnecessary function
prototype position changes in the damon.h.  This could make later
'git-blame' a little bit complex.  It also violates the 80 columns limit,
which is not madated but preferred and all other code of DAMON is
following.

This commit fixes those.  This should be folded into the patch before it
is sent to Linus.

[1] https://lore.kernel.org/mm-commits/20211115174837.wvyS8FbLx%25akpm@linux-foundation.org/

Link: https://lkml.kernel.org/r/20211118114827.20052-1-sj@kernel.org
Signed-off-by: SeongJae Park <sj@kernel.org>
Cc: Muchun Song <songmuchun@bytedance.com>
Cc: Xin Hao <xhao@linux.alibaba.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 include/linux/damon.h |    4 ++--
 mm/damon/paddr.c      |    5 +++--
 mm/damon/vaddr.c      |    8 +++++---
 3 files changed, 10 insertions(+), 7 deletions(-)

--- a/include/linux/damon.h~mm-damon-remove-some-no-need-func-definitions-in-damonh-file-fix
+++ a/include/linux/damon.h
@@ -461,13 +461,13 @@ int damon_stop(struct damon_ctx **ctxs,
 #endif	/* CONFIG_DAMON */
 
 #ifdef CONFIG_DAMON_VADDR
-void damon_va_set_primitives(struct damon_ctx *ctx);
 bool damon_va_target_valid(void *t);
+void damon_va_set_primitives(struct damon_ctx *ctx);
 #endif	/* CONFIG_DAMON_VADDR */
 
 #ifdef CONFIG_DAMON_PADDR
-void damon_pa_set_primitives(struct damon_ctx *ctx);
 bool damon_pa_target_valid(void *t);
+void damon_pa_set_primitives(struct damon_ctx *ctx);
 #endif	/* CONFIG_DAMON_PADDR */
 
 #endif	/* _DAMON_H */
--- a/mm/damon/paddr.c~mm-damon-remove-some-no-need-func-definitions-in-damonh-file-fix
+++ a/mm/damon/paddr.c
@@ -246,8 +246,9 @@ static int damon_pa_apply_scheme(struct
 	return 0;
 }
 
-static int damon_pa_scheme_score(struct damon_ctx *context, struct damon_target *t,
-		struct damon_region *r, struct damos *scheme)
+static int damon_pa_scheme_score(struct damon_ctx *context,
+		struct damon_target *t, struct damon_region *r,
+		struct damos *scheme)
 {
 	switch (scheme->action) {
 	case DAMOS_PAGEOUT:
--- a/mm/damon/vaddr.c~mm-damon-remove-some-no-need-func-definitions-in-damonh-file-fix
+++ a/mm/damon/vaddr.c
@@ -292,7 +292,8 @@ static void damon_va_init(struct damon_c
  *
  * Returns true if it is.
  */
-static bool damon_intersect(struct damon_region *r, struct damon_addr_range *re)
+static bool damon_intersect(struct damon_region *r,
+		struct damon_addr_range *re)
 {
 	return !(r->ar.end <= re->start || re->end <= r->ar.start);
 }
@@ -633,8 +634,9 @@ static int damon_va_apply_scheme(struct
 	return damos_madvise(t, r, madv_action);
 }
 
-static int damon_va_scheme_score(struct damon_ctx *context, struct damon_target *t,
-		struct damon_region *r, struct damos *scheme)
+static int damon_va_scheme_score(struct damon_ctx *context,
+		struct damon_target *t, struct damon_region *r,
+		struct damos *scheme)
 {
 
 	switch (scheme->action) {
_
