From: Andrew Morton <akpm@linux-foundation.org>
Subject: linux-next-rejects-fix


Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 include/linux/memcontrol.h |    1 -
 mm/page_alloc.c            |    4 ++--
 2 files changed, 2 insertions(+), 3 deletions(-)

--- a/include/linux/memcontrol.h~linux-next-rejects-fix
+++ a/include/linux/memcontrol.h
@@ -369,7 +369,6 @@ enum page_memcg_data_flags {
 
 #define MEMCG_DATA_FLAGS_MASK (__NR_MEMCG_DATA_FLAGS - 1)
 
-static inline bool PageMemcgKmem(struct page *page);
 static inline bool folio_memcg_kmem(struct folio *folio);
 
 /*
--- a/mm/page_alloc.c~linux-next-rejects-fix
+++ a/mm/page_alloc.c
@@ -1296,7 +1296,7 @@ static __always_inline bool free_pages_p
 		 * Do not let hwpoison pages hit pcplists/buddy
 		 * Untie memcg state and reset page's owner
 		 */
-		if (memcg_kmem_enabled() && PageMemcgKmem(page))
+		if (memcg_kmem_enabled() && folio_memcg_kmem(page_folio(page)))
 			__memcg_kmem_uncharge_page(page, order);
 		reset_page_owner(page, order);
 		return false;
@@ -1326,7 +1326,7 @@ static __always_inline bool free_pages_p
 	}
 	if (PageMappingFlags(page))
 		page->mapping = NULL;
-	if (memcg_kmem_enabled() && PageMemcgKmem(page))
+	if (memcg_kmem_enabled() && folio_memcg_kmem(page_folio(page)))
 		__memcg_kmem_uncharge_page(page, order);
 	if (check_free)
 		bad += check_free_page(page);
_
