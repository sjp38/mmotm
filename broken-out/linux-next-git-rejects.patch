From: Andrew Morton <akpm@linux-foundation.org>
Subject: linux-next-git-rejects

Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 arch/s390/kernel/ftrace.c |    5 -----
 arch/s390/kernel/mcount.S |    9 ---------
 fs/btrfs/extent_io.c      |    4 ----
 fs/btrfs/transaction.h    |    4 ----
 4 files changed, 22 deletions(-)

--- a/arch/s390/kernel/ftrace.c~linux-next-git-rejects
+++ a/arch/s390/kernel/ftrace.c
@@ -223,13 +223,8 @@ int ftrace_make_call(struct dyn_ftrace *
 	if (IS_ERR(trampoline))
 		return PTR_ERR(trampoline);
 	s390_kernel_write(&trampoline->interceptor, &addr, sizeof(addr));
-<<<<<<< HEAD
-	brcl_enable((void *)rec->ip);
-	return 0;
-=======
 	/* Expect brcl 0x0,... */
 	return ftrace_patch_branch_mask((void *)rec->ip, 0xc004, true);
->>>>>>> linux-next/akpm-base
 }
 
 int ftrace_update_ftrace_func(ftrace_func_t func)
--- a/arch/s390/kernel/mcount.S~linux-next-git-rejects
+++ a/arch/s390/kernel/mcount.S
@@ -26,12 +26,7 @@ ENDPROC(ftrace_stub)
 #define STACK_PTREGS_PSW	(STACK_PTREGS + __PT_PSW)
 #define STACK_PTREGS_ORIG_GPR2	(STACK_PTREGS + __PT_ORIG_GPR2)
 #define STACK_PTREGS_FLAGS	(STACK_PTREGS + __PT_FLAGS)
-<<<<<<< HEAD
-#ifdef __PACK_STACK
-/* allocate just enough for r14, r15 and backchain */
-=======
 /* packed stack: allocate just enough for r14, r15 and backchain */
->>>>>>> linux-next/akpm-base
 #define TRACED_FUNC_FRAME_SIZE	24
 
 	.macro	ftrace_regs_entry, allregs=0
@@ -63,10 +58,6 @@ ENDPROC(ftrace_stub)
 
 	.if \allregs == 1
 	stg	%r14,(STACK_PTREGS_PSW)(%r15)
-<<<<<<< HEAD
-	stosm	(STACK_PTREGS_PSW)(%r15),0
-=======
->>>>>>> linux-next/akpm-base
 #ifdef CONFIG_HAVE_MARCH_Z10_FEATURES
 	mvghi	STACK_PTREGS_FLAGS(%r15),_PIF_FTRACE_FULL_REGS
 #else
--- a/fs/btrfs/extent_io.c~linux-next-git-rejects
+++ a/fs/btrfs/extent_io.c
@@ -6888,11 +6888,7 @@ static void assert_eb_page_uptodate(cons
 	 * would have !PageUptodate && !PageError, as we clear PageError before
 	 * reading.
 	 */
-<<<<<<< HEAD
-	if (fs_info->sectorsize < PAGE_SIZE) {
-=======
 	if (fs_info->nodesize < PAGE_SIZE) {
->>>>>>> linux-next/akpm-base
 		bool uptodate, error;
 
 		uptodate = btrfs_subpage_test_uptodate(fs_info, page,
--- a/fs/btrfs/transaction.h~linux-next-git-rejects
+++ a/fs/btrfs/transaction.h
@@ -217,11 +217,7 @@ int btrfs_wait_for_commit(struct btrfs_f
 void btrfs_add_dead_root(struct btrfs_root *root);
 int btrfs_defrag_root(struct btrfs_root *root);
 void btrfs_maybe_wake_unfinished_drop(struct btrfs_fs_info *fs_info);
-<<<<<<< HEAD
-int btrfs_clean_one_deleted_snapshot(struct btrfs_root *root);
-=======
 int btrfs_clean_one_deleted_snapshot(struct btrfs_fs_info *fs_info);
->>>>>>> linux-next/akpm-base
 int btrfs_commit_transaction(struct btrfs_trans_handle *trans);
 void btrfs_commit_transaction_async(struct btrfs_trans_handle *trans);
 int btrfs_end_transaction_throttle(struct btrfs_trans_handle *trans);
_
