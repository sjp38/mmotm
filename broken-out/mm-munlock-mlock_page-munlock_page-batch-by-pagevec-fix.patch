From: Andrew Morton <akpm@linux-foundation.org>
Subject: mm-munlock-mlock_page-munlock_page-batch-by-pagevec-fix

implement mlock_lru() and mlock_new() as inlines, per Matthew

Cc: Alistair Popple <apopple@nvidia.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Hugh Dickins <hughd@google.com>
Cc: Johannes Weiner <hannes@cmpxchg.org>
Cc: "Kirill A. Shutemov" <kirill@shutemov.name>
Cc: Matthew Wilcox <willy@infradead.org>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Rik van Riel <riel@surriel.com>
Cc: Shakeel Butt <shakeelb@google.com>
Cc: Suren Baghdasaryan <surenb@google.com>
Cc: Vlastimil Babka <vbabka@suse.cz>
Cc: Yu Zhao <yuzhao@google.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---

 mm/mlock.c |   11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

--- a/mm/mlock.c~mm-munlock-mlock_page-munlock_page-batch-by-pagevec-fix
+++ a/mm/mlock.c
@@ -159,8 +159,15 @@ out:
  */
 #define LRU_PAGE 0x1
 #define NEW_PAGE 0x2
-#define mlock_lru(page) ((struct page *)((unsigned long)page + LRU_PAGE))
-#define mlock_new(page) ((struct page *)((unsigned long)page + NEW_PAGE))
+static inline struct page *mlock_lru(struct page *page)
+{
+	return (struct page *)((unsigned long)page + LRU_PAGE);
+}
+
+static inline struct page *mlock_new(struct page *page)
+{
+	return (struct page *)((unsigned long)page + NEW_PAGE);
+}
 
 /*
  * mlock_pagevec() is derived from pagevec_lru_move_fn():
_
